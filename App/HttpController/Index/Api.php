<?php
/**
 * Created by PhpStorm.
 * User: x
 * Date: 2018/12/30
 * Time: 17:47
 */

namespace  App\HttpController\Index;

use App\Base\HomeBaseController;
use EasySwoole\Core\Http\Request;
use EasySwoole\Core\Http\Response;
use think\Db;

class Api extends HomeBaseController
{
    public function __construct(string $actionName, Request $request, Response $response)
    {
        parent::__construct($actionName, $request, $response);
    }

    protected function onRequest($action): ?bool
    {
        return parent::onRequest($action); // TODO: Change the autogenerated stub
    }

    // 订单系统查看订单分类数据  ------------------  订单系统  -------------------- //


    // json 请求模板
    public function json(){
        $sysinfo = Db::name('system')->where('id',2)->select();
        $this->response()->withHeader('Content-type','application/json;charset=utf-8');
        $this->response()->write(json_encode($sysinfo));
    }

    // ------------------------  测试临时代码 ------------------------------//
    public function p21(){
        $request = $this->request();
        $name = $request->getRequestParam('name');
        $stands = $request->getRequestParam('stands');
        $this->response()->withHeader('Content-type','application/json;charset=utf-8');
        $this->response()->write(json_encode(['name'=>$name,'stands'=>$stands]));
    }

    public function p2(){
        $request = $this->request();
        $name = $request->getRequestParam('username');
        $id = $request->getRequestParam('id');
        $this->response()->withHeader('Content-type','application/json;charset=utf-8');
        $this->response()->write(json_encode(['name'=>$name,'id'=>$id]));
    }

    // 订单系统统计数据
    public function o(){
        $request = $this->request();
        $id = $request->getRequestParam('id');
        // 新增订单数据
        $data = [
            'name' => '张华',
            'age'  => 56,
            'phone'=> 15512345678,
            'address' => '广州市天河区东站路1号',
            'order'=> 'many books',
        ];
        $data_json = json_encode($data);
        $this->response()->withHeader('Content-type','application/json;charset=utf-8');
        $neworder = Db::name('orderjson')->insert(['order_id'=>$id,'content'=>$data_json]);
        $this->response()->write(json_encode($neworder));
    }

    // 模板消息链接跳转防封
    public function g0(){
        $request = $this->request();
        $id = $request->getRequestParam('id');
        $url_postfix = Db::name('wxurls')->field('postfix,pid,domain')->where('id',$id)->select();
        $url_postfix = $url_postfix[0];
        $this->response()->withHeader('Content-type','application/json;charset=utf-8');
        if($url_postfix){
            // 选出随机的二跳域名domain
            $map = [
                'status' => 1 ,
                'type'   => 2 ,
                'pid'   => $url_postfix['pid']
            ];
            $url_domain = Db::name('wxurls')->query('SELECT domain, id  FROM think_wxurls WHERE `status` = 1 AND type = 2 AND pid = '.$url_postfix['pid'].' ORDER BY RAND() LIMIT 1');
            if($url_domain){
                Db::name('wxurls')->query('UPDATE think_wxurls set jump_reads=jump_reads+1 WHERE id =' . $url_domain[0]['id']);
                // 增加一次的访问量  update student set score=score+1 where id = 1
                Db::name('wxurls')->query('UPDATE think_wxurls set jump_reads=jump_reads+1 WHERE id = ' . $id);
                $url_domain = $url_domain[0]['domain'];
                $domain = $url_domain.'/'.$url_postfix['postfix'] .'/index.html' ;
                $this->response()->write(json_encode(['status' => 1, 'url' => $domain]));
            }else{
                $this->response()->write(json_encode(['status' => 2, 'url' => $url_postfix['domain'].'/'.$url_postfix['postfix'].'/index.html']));
            }
        }else{
            $this->response()->write(json_encode(['status' => 3, 'msg' => 'ID is not here!']));
        }
    }

}